cc87db7225728f3f53b4b6dd2007ca26
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _reactRedux = require("react-redux");

var _reactNative = require("react-native");

var _dimension = require("../resources/dimension.js");

var _textStyle = require("../resources/textStyle.js");

var _FontAwesome = _interopRequireDefault(require("react-native-vector-icons/FontAwesome"));

var _actions = require("../redux/actions.js");

var _OrderPanel = _interopRequireDefault(require("../components/OrderPanel.js"));

var _TearLines = _interopRequireDefault(require("../components/TearLines.js"));

function _createSuper(Derived) { return function () { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

var CartScreen = function (_Component) {
  (0, _inherits2.default)(CartScreen, _Component);

  var _super = _createSuper(CartScreen);

  function CartScreen() {
    var _this;

    (0, _classCallCheck2.default)(this, CartScreen);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));
    _this.state = {
      isOpenOrderPanel: false,
      productData: {},
      oldState: {},
      modifiedOrderLineIndex: null
    };

    _this.navigateBack = function () {
      var navigation = _this.props.navigation;
      navigation.goBack();
    };

    _this.calculateTotalPrice = function () {
      var orderLineArray = _this.props.orderLineArray;
      var totalPrice = '0';
      orderLineArray.forEach(function (orderLine) {
        totalPrice = eval(totalPrice + "+" + orderLine.productPrice);
      });
      return totalPrice;
    };

    _this.showCartList = function (_ref) {
      var item = _ref.item,
          index = _ref.index;
      var productData = item.productData,
          oldState = item.oldState;
      var imageUrl = productData.imageUrl,
          title = productData.title;
      var quantity = item.quantity,
          optionArray = item.optionArray,
          productPrice = item.productPrice;
      var options = '';
      optionArray.forEach(function (option) {
        options = options + option.title + ',' + ' ';
      });
      return _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: function onPress() {
          return _this.openMofifyProductPanel(productData, oldState, index);
        },
        style: _dimension.dimensionStyles.ItemCartListContainer
      }, _react.default.createElement(_reactNative.View, {
        style: {
          flex: 1
        }
      }, _react.default.createElement(_reactNative.Image, {
        style: _dimension.dimensionStyles.ItemCartListImage,
        source: {
          uri: imageUrl
        },
        resizeMode: "cover"
      })), _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.ItemCartListInfo
      }, _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: function onPress() {
          return _this.deleteOrderLine(index);
        },
        style: _dimension.dimensionStyles.XIconCartScreen
      }, _react.default.createElement(_FontAwesome.default, {
        name: "close",
        size: 30,
        color: "#e5293e"
      })), _react.default.createElement(_reactNative.Text, {
        numberOfLines: 1,
        style: _textStyle.textStyle.ItemCartListName
      }, quantity, " x ", title), _react.default.createElement(_reactNative.Text, {
        numberOfLines: 1,
        style: _textStyle.textStyle.ItemCartListOption
      }, options), _react.default.createElement(_reactNative.Text, {
        numberOfLines: 1,
        style: _textStyle.textStyle.ItemCartListPrice
      }, "$", productPrice)));
    };

    _this.deleteOrderLine = function (orderLineIndex) {
      var deleteOrderLine = _this.props.deleteOrderLine;
      deleteOrderLine(orderLineIndex);
    };

    _this.openMofifyProductPanel = function (productData, oldState, modifiedOrderLineIndex) {
      _this.setState({
        productData: productData,
        oldState: oldState,
        isOpenOrderPanel: true,
        modifiedOrderLineIndex: modifiedOrderLineIndex
      });
    };

    _this.navigateToLogInScreen = function () {
      var navigation = _this.props.navigation;
      navigation.navigate('Log In Screen');
    };

    _this.navigateToCheckOutScreen = function () {
      var totalPrice = _this.calculateTotalPrice();

      var navigation = _this.props.navigation;
      navigation.navigate('Check Out Screen', {
        totalPrice: totalPrice
      });
    };

    return _this;
  }

  (0, _createClass2.default)(CartScreen, [{
    key: "render",
    value: function render() {
      var _this2 = this;

      var _this$props = this.props,
          orderLineArray = _this$props.orderLineArray,
          userToken = _this$props.userToken;
      var totalPrice = this.calculateTotalPrice();
      var _this$state = this.state,
          productData = _this$state.productData,
          oldState = _this$state.oldState,
          modifiedOrderLineIndex = _this$state.modifiedOrderLineIndex;
      return _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.container
      }, _react.default.createElement(_OrderPanel.default, {
        modalVisible: this.state.isOpenOrderPanel,
        onClose: function onClose() {
          return _this2.setState({
            isOpenOrderPanel: false
          });
        },
        RequestClose: function RequestClose() {
          return _this2.setState({
            isOpenOrderPanel: false
          });
        },
        productData: productData,
        oldState: oldState,
        modifiedOrderLineIndex: modifiedOrderLineIndex
      }), _react.default.createElement(_reactNative.ScrollView, null, _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.curtainBackground
      }), _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.headerCategoryName
      }, _react.default.createElement(_reactNative.Text, {
        style: _textStyle.textStyle.headerCategoryName
      }, "Your Cart")), _react.default.createElement(_reactNative.TouchableOpacity, {
        onPress: this.navigateBack,
        style: _dimension.dimensionStyles.BarsIcon
      }, _react.default.createElement(_FontAwesome.default, {
        name: "angle-left",
        size: 30,
        color: "#FFFFFF"
      })), _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.cartBox
      }, _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.cartBoxHeader
      }, _react.default.createElement(_reactNative.Text, {
        style: _textStyle.textStyle.cartBoxHeader
      }, orderLineArray.length, " Items / Total Price $", totalPrice)), _react.default.createElement(_reactNative.FlatList, {
        nestedScrollEnabled: true,
        numColumns: 1,
        showsVerticalScrollIndicator: false,
        showsHorizontalScrollIndicator: false,
        data: orderLineArray,
        renderItem: this.showCartList
      }), _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.dashLine
      }), _react.default.createElement(_reactNative.View, {
        style: _dimension.dimensionStyles.cartBoxFooter
      }, _react.default.createElement(_reactNative.Text, {
        style: _textStyle.textStyle.cartBoxFooter
      }, "TOTAL"), _react.default.createElement(_reactNative.Text, {
        style: _textStyle.textStyle.cartBoxFooterPrice
      }, "$", totalPrice))), _react.default.createElement(_TearLines.default, {
        isUnder: true,
        width: 0.9 * _reactNative.Dimensions.get('window').width,
        color: "#FFFFFF"
      }), _react.default.createElement(_reactNative.TouchableOpacity, {
        style: _dimension.dimensionStyles.checkOutButton,
        onPress: function onPress() {
          if (userToken === null) {
            alert('Please log in first!');

            _this2.navigateToLogInScreen();
          } else if (orderLineArray.length === 0) {
            alert('Your cart is still empty!');
          } else {
            _this2.navigateToCheckOutScreen();
          }
        }
      }, _react.default.createElement(_reactNative.Text, {
        style: _textStyle.textStyle.orderNowButton
      }, "CHECK OUT"))));
    }
  }]);
  return CartScreen;
}(_react.Component);

CartScreen.propTypes = {
  orderLineArray: _propTypes.default.array,
  userToken: _propTypes.default.object
};

var mapStateToProps = function mapStateToProps(state) {
  return {
    orderLineArray: state.orderLineArray,
    userToken: state.userToken
  };
};

var mapDispatchToProps = function mapDispatchToProps(dispatch) {
  return {
    deleteOrderLine: function deleteOrderLine(orderLineIndex) {
      return dispatch((0, _actions.deleteOrderLine)(orderLineIndex));
    }
  };
};

var _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(CartScreen);

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,