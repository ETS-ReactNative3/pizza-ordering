{"version":3,"sources":["CartScreen.js"],"names":["CartScreen","state","isOpenOrderPanel","productData","oldState","modifiedOrderLineIndex","navigateBack","navigation","props","goBack","calculateTotalPrice","orderLineArray","totalPrice","forEach","orderLine","eval","productPrice","showCartList","item","index","imageUrl","title","quantity","optionArray","options","option","openMofifyProductPanel","dimensionStyles","ItemCartListContainer","flex","ItemCartListImage","uri","ItemCartListInfo","deleteOrderLine","XIconCartScreen","textStyle","ItemCartListName","ItemCartListOption","ItemCartListPrice","orderLineIndex","setState","navigateToLogInScreen","navigate","navigateToCheckOutScreen","userToken","container","curtainBackground","headerCategoryName","BarsIcon","cartBox","cartBoxHeader","length","dashLine","cartBoxFooter","cartBoxFooterPrice","Dimensions","get","width","checkOutButton","alert","orderNowButton","Component","propTypes","PropTypes","array","object","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  FlatList,\r\n  Image,\r\n  Dimensions,\r\n} from 'react-native';\r\nimport {dimensionStyles} from '../resources/dimension.js';\r\nimport {textStyle} from '../resources/textStyle.js';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport {deleteOrderLine} from '../redux/actions.js';\r\nimport OrderPanel from '../components/OrderPanel.js';\r\nimport TearLines from '../components/TearLines.js';\r\n\r\nclass CartScreen extends Component {\r\n  state = {\r\n    isOpenOrderPanel: false,\r\n    productData: {},\r\n    oldState: {},\r\n    modifiedOrderLineIndex: null,\r\n  };\r\n\r\n  navigateBack = () => {\r\n    const {navigation} = this.props;\r\n    navigation.goBack();\r\n  };\r\n\r\n  calculateTotalPrice = () => {\r\n    const {orderLineArray} = this.props;\r\n    let totalPrice = '0';\r\n    orderLineArray.forEach(orderLine => {\r\n      totalPrice = eval(`${totalPrice}+${orderLine.productPrice}`);\r\n    });\r\n    return totalPrice;\r\n  };\r\n\r\n  showCartList = ({item, index}) => {\r\n    const {productData, oldState} = item;\r\n    const {imageUrl, title} = productData;\r\n    const {quantity, optionArray, productPrice} = item;\r\n    let options = '';\r\n    optionArray.forEach(option => {\r\n      options = options + option.title + ',' + ' ';\r\n    });\r\n    return (\r\n      <TouchableOpacity\r\n        onPress={() =>\r\n          this.openMofifyProductPanel(productData, oldState, index)\r\n        }\r\n        style={dimensionStyles.ItemCartListContainer}>\r\n        <View style={{flex: 1}}>\r\n          <Image\r\n            style={dimensionStyles.ItemCartListImage}\r\n            source={{uri: imageUrl}}\r\n            resizeMode=\"cover\"\r\n          />\r\n        </View>\r\n        <View style={dimensionStyles.ItemCartListInfo}>\r\n          <TouchableOpacity\r\n            onPress={() => this.deleteOrderLine(index)}\r\n            style={dimensionStyles.XIconCartScreen}>\r\n            <Icon name=\"close\" size={30} color=\"#e5293e\" />\r\n          </TouchableOpacity>\r\n          <Text numberOfLines={1} style={textStyle.ItemCartListName}>\r\n            {quantity} x {title}\r\n          </Text>\r\n          <Text numberOfLines={1} style={textStyle.ItemCartListOption}>\r\n            {options}\r\n          </Text>\r\n          <Text numberOfLines={1} style={textStyle.ItemCartListPrice}>\r\n            ${productPrice}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  deleteOrderLine = orderLineIndex => {\r\n    const {deleteOrderLine} = this.props;\r\n    deleteOrderLine(orderLineIndex);\r\n  };\r\n\r\n  openMofifyProductPanel = (productData, oldState, modifiedOrderLineIndex) => {\r\n    this.setState({\r\n      productData: productData,\r\n      oldState: oldState,\r\n      isOpenOrderPanel: true,\r\n      modifiedOrderLineIndex: modifiedOrderLineIndex,\r\n    });\r\n  };\r\n\r\n  navigateToLogInScreen = () => {\r\n    const {navigation} = this.props;\r\n    navigation.navigate('Log In Screen');\r\n  };\r\n\r\n  navigateToCheckOutScreen = () => {\r\n    const totalPrice = this.calculateTotalPrice();\r\n    const {navigation} = this.props;\r\n    navigation.navigate('Check Out Screen', {\r\n      totalPrice: totalPrice,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {orderLineArray, userToken} = this.props;\r\n    const totalPrice = this.calculateTotalPrice();\r\n    const {productData, oldState, modifiedOrderLineIndex} = this.state;\r\n\r\n    return (\r\n      <View style={dimensionStyles.container}>\r\n        <OrderPanel\r\n          modalVisible={this.state.isOpenOrderPanel}\r\n          onClose={() => this.setState({isOpenOrderPanel: false})}\r\n          RequestClose={() => this.setState({isOpenOrderPanel: false})}\r\n          productData={productData}\r\n          oldState={oldState}\r\n          modifiedOrderLineIndex={modifiedOrderLineIndex}\r\n        />\r\n        <ScrollView>\r\n          <View style={dimensionStyles.curtainBackground} />\r\n          <View style={dimensionStyles.headerCategoryName}>\r\n            <Text style={textStyle.headerCategoryName}>Your Cart</Text>\r\n          </View>\r\n          <TouchableOpacity\r\n            onPress={this.navigateBack}\r\n            style={dimensionStyles.BarsIcon}>\r\n            <Icon name=\"angle-left\" size={30} color=\"#FFFFFF\" />\r\n          </TouchableOpacity>\r\n          <View style={dimensionStyles.cartBox}>\r\n            <View style={dimensionStyles.cartBoxHeader}>\r\n              <Text style={textStyle.cartBoxHeader}>\r\n                {orderLineArray.length} Items / Total Price ${totalPrice}\r\n              </Text>\r\n            </View>\r\n            <FlatList\r\n              nestedScrollEnabled={true}\r\n              numColumns={1}\r\n              showsVerticalScrollIndicator={false}\r\n              showsHorizontalScrollIndicator={false}\r\n              data={orderLineArray}\r\n              renderItem={this.showCartList}\r\n            />\r\n            <View style={dimensionStyles.dashLine} />\r\n            <View style={dimensionStyles.cartBoxFooter}>\r\n              <Text style={textStyle.cartBoxFooter}>TOTAL</Text>\r\n              <Text style={textStyle.cartBoxFooterPrice}>${totalPrice}</Text>\r\n            </View>\r\n          </View>\r\n          <TearLines\r\n            isUnder\r\n            width={0.9 * Dimensions.get('window').width}\r\n            color=\"#FFFFFF\"\r\n          />\r\n          <TouchableOpacity\r\n            style={dimensionStyles.checkOutButton}\r\n            onPress={() => {\r\n              if (userToken === null) {\r\n                alert('Please log in first!');\r\n                this.navigateToLogInScreen();\r\n              } else if (orderLineArray.length === 0) {\r\n                alert('Your cart is still empty!');\r\n              } else {\r\n                this.navigateToCheckOutScreen();\r\n              }\r\n            }}>\r\n            <Text style={textStyle.orderNowButton}>CHECK OUT</Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nCartScreen.propTypes = {\r\n  orderLineArray: PropTypes.array,\r\n  userToken: PropTypes.object,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  orderLineArray: state.orderLineArray,\r\n  userToken: state.userToken,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteOrderLine: orderLineIndex => dispatch(deleteOrderLine(orderLineIndex)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(CartScreen);\r\n"]}