{"version":3,"sources":["OrderPanel.js"],"names":["mockData","_id","title","price","type","product","OrderPanel","state","isLoading","data","sizeArray","crustArray","toppingArray","size","crust","topping","quantity","getProductOption","props","productData","modifiedOrderLineIndex","oldState","response","undefined","setState","alert","console","log","JSON","parse","stringify","filterOptionByType","filter","unitData","showSize","item","dimensionStyles","SizePicker","textStyle","SizeText","checkIcon","SizePickerUnpick","SizeTextUnpick","showCrust","showTopping","checkInclude","includes","index","findIndex","splice","push","calculatePrice","totalPrice","sizeOption","find","eval","crustOption","forEach","toppingUnit","toppingOption","createOrderLine","addToCart","orderLine","optionArray","Number","productPrice","modifyOrderLine","modalVisible","onClose","RequestClose","imageUrl","XIconOrderPanel","ImageOrderPanel","uri","ProductDetailName","length","ModifyType","SizeModifyContainer","quantityPicker","label","value","textAlign","fontSize","separateLine","PriceContainer","addToCartButton","orderNowButton","Component","propTypes","PropTypes","bool","func","object","number","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport getAPI from '../repository/getAPI.js';\r\nimport {\r\n  Modal,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  Image,\r\n  FlatList,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport RNPickerSelect from 'react-native-picker-select';\r\nimport PropTypes from 'prop-types';\r\nimport SplashScreen from '../screens/SplashScreen.js';\r\nimport {connect} from 'react-redux';\r\nimport {dimensionStyles} from '../resources/dimension.js';\r\nimport {textStyle} from '../resources/textStyle.js';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport Icon5 from 'react-native-vector-icons/FontAwesome5';\r\nimport {addToCart, modifyOrderLine} from '../redux/actions.js';\r\nimport {Dimensions} from 'react-native';\r\n\r\nconst mockData = [\r\n  {\r\n    _id: '5e9e969745787b2cc452754f',\r\n    title: 'Size M',\r\n    price: '1',\r\n    type: 'Size',\r\n    product: '5e9e969745787b2cc452752f',\r\n  },\r\n  {\r\n    _id: '5e9e969745787b2cc452754f',\r\n    title: 'Size L',\r\n    price: '2',\r\n    type: 'Size',\r\n    product: '5e9e969745787b2cc452752f',\r\n  },\r\n  {\r\n    _id: '5e9e969745787b2cc452754f',\r\n    title: 'Thin Crust',\r\n    price: '1.5',\r\n    type: 'Crust',\r\n    product: '5e9e969745787b2cc452752f',\r\n  },\r\n  {\r\n    _id: '5e9e969745787b2cc452754f',\r\n    title: 'Thick Crust',\r\n    price: '2.5',\r\n    type: 'Crust',\r\n    product: '5e9e969745787b2cc452752f',\r\n  },\r\n  {\r\n    _id: '5e9e969745787b2cc452754f',\r\n    title: 'Shrimp',\r\n    price: '1',\r\n    type: 'Topping',\r\n    product: '5e9e969745787b2cc452752f',\r\n  },\r\n  {\r\n    _id: '5e9e969745787b2cc452754f',\r\n    title: 'Onion',\r\n    price: '2',\r\n    type: 'Topping',\r\n    product: '5e9e969745787b2cc452752f',\r\n  },\r\n  {\r\n    _id: '5e9e969745787b2cc452754f',\r\n    title: 'Pine Apple',\r\n    price: '3',\r\n    type: 'Topping',\r\n    product: '5e9e969745787b2cc452752f',\r\n  },\r\n];\r\n\r\nclass OrderPanel extends Component {\r\n  state = {\r\n    isLoading: true,\r\n    data: [],\r\n    sizeArray: [],\r\n    crustArray: [],\r\n    toppingArray: [],\r\n    size: '',\r\n    crust: '',\r\n    topping: [],\r\n    quantity: '1',\r\n  };\r\n\r\n  getProductOption = async () => {\r\n    //this.setState({isLoading: true});\r\n    const {productData, modifiedOrderLineIndex, oldState} = this.props;\r\n    const {_id} = productData;\r\n    try {\r\n      let response = await getAPI(`/product/${_id}/option`);\r\n      //console.log(response.data)\r\n      if (modifiedOrderLineIndex === undefined) {\r\n        this.setState({\r\n          data: response.data,\r\n          size: '',\r\n          crust: '',\r\n          topping: [],\r\n          quantity: '1',\r\n        });\r\n      } else {\r\n        this.setState({\r\n          data: response.data,\r\n          size: oldState.size,\r\n          crust: oldState.crust,\r\n          topping: oldState.topping,\r\n          quantity: oldState.quantity,\r\n        });\r\n      }\r\n      //this.setState({data: mockData});\r\n    } catch (errorMessage) {\r\n      alert(errorMessage);\r\n      console.log(errorMessage);\r\n    }\r\n    const data = JSON.parse(JSON.stringify(this.state.data));\r\n    this.filterOptionByType(data);\r\n    this.setState({isLoading: false});\r\n  };\r\n\r\n  filterOptionByType = data => {\r\n    let sizeArray = data.filter(unitData => unitData.type === 'Size');\r\n    let crustArray = data.filter(unitData => unitData.type === 'Crust');\r\n    let toppingArray = data.filter(unitData => unitData.type === 'Topping');\r\n    this.setState({\r\n      sizeArray: sizeArray,\r\n      crustArray: crustArray,\r\n      toppingArray: toppingArray,\r\n    });\r\n  };\r\n\r\n  showSize = ({item}) => {\r\n    const {title, price} = item;\r\n    const {size} = this.state;\r\n    if (size === title) {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={() => this.setState({size: title})}\r\n          style={dimensionStyles.SizePicker}>\r\n          <Text style={textStyle.SizeText}>{title}</Text>\r\n          <Text style={textStyle.SizeText}>Price: +{price}$</Text>\r\n          <View style={dimensionStyles.checkIcon}>\r\n            <Icon5 name=\"check\" size={13} color=\"#FFFFFF\" />\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={() => this.setState({size: title})}\r\n          style={dimensionStyles.SizePickerUnpick}>\r\n          <Text style={textStyle.SizeTextUnpick}>{title}</Text>\r\n          <Text style={textStyle.SizeTextUnpick}>Price: +{price}$</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  };\r\n\r\n  showCrust = ({item}) => {\r\n    const {title, price} = item;\r\n    const {crust} = this.state;\r\n    if (crust === title) {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={() => this.setState({crust: title})}\r\n          style={dimensionStyles.SizePicker}>\r\n          <Text style={textStyle.SizeText}>{title}</Text>\r\n          <Text style={textStyle.SizeText}>Price: +{price}$</Text>\r\n          <View style={dimensionStyles.checkIcon}>\r\n            <Icon5 name=\"check\" size={13} color=\"#FFFFFF\" />\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={() => this.setState({crust: title})}\r\n          style={dimensionStyles.SizePickerUnpick}>\r\n          <Text style={textStyle.SizeTextUnpick}>{title}</Text>\r\n          <Text style={textStyle.SizeTextUnpick}>Price: +{price}$</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  };\r\n\r\n  showTopping = ({item}) => {\r\n    const {title, price} = item;\r\n    let topping = [...this.state.topping];\r\n    let checkInclude = topping.includes(title);\r\n    if (checkInclude === true) {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            let index = topping.findIndex(unitData => unitData === title);\r\n            topping.splice(index, 1);\r\n            this.setState({topping: topping});\r\n          }}\r\n          style={dimensionStyles.SizePicker}>\r\n          <Text style={textStyle.SizeText}>{title}</Text>\r\n          <Text style={textStyle.SizeText}>Price: +{price}$</Text>\r\n          <View style={dimensionStyles.checkIcon}>\r\n            <Icon5 name=\"check\" size={13} color=\"#FFFFFF\" />\r\n          </View>\r\n        </TouchableOpacity>\r\n      );\r\n    } else {\r\n      return (\r\n        <TouchableOpacity\r\n          onPress={() => {\r\n            topping.push(title);\r\n            this.setState({topping: topping});\r\n          }}\r\n          style={dimensionStyles.SizePickerUnpick}>\r\n          <Text style={textStyle.SizeTextUnpick}>{title}</Text>\r\n          <Text style={textStyle.SizeTextUnpick}>Price: +{price}$</Text>\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n  };\r\n\r\n  calculatePrice = () => {\r\n    const {productData} = this.props;\r\n    let {price} = productData;\r\n\r\n    let totalPrice = price;\r\n\r\n    const {\r\n      sizeArray,\r\n      crustArray,\r\n      toppingArray,\r\n      size,\r\n      crust,\r\n      topping,\r\n      quantity,\r\n    } = this.state;\r\n\r\n    let sizeOption = sizeArray.find(unitData => unitData.title === size);\r\n    if (sizeOption !== undefined) {\r\n      totalPrice = eval(`${totalPrice}+${sizeOption.price}`);\r\n    }\r\n\r\n    let crustOption = crustArray.find(unitData => unitData.title === crust);\r\n    if (crustOption !== undefined) {\r\n      totalPrice = eval(`${totalPrice}+${crustOption.price}`);\r\n    }\r\n\r\n    topping.forEach(toppingUnit => {\r\n      let toppingOption = toppingArray.find(\r\n        unitData => unitData.title === toppingUnit,\r\n      );\r\n      if (toppingOption !== undefined) {\r\n        totalPrice = eval(`${totalPrice}+${toppingOption.price}`);\r\n      }\r\n    });\r\n\r\n    totalPrice = eval(`${totalPrice}*${quantity}`);\r\n\r\n    return totalPrice;\r\n  };\r\n\r\n  createOrderLine = totalPrice => {\r\n    const {addToCart} = this.props;\r\n    const {productData} = this.props;\r\n    const {\r\n      sizeArray,\r\n      crustArray,\r\n      toppingArray,\r\n      size,\r\n      crust,\r\n      topping,\r\n      quantity,\r\n    } = this.state;\r\n    let orderLine = {};\r\n\r\n    orderLine.product = productData._id;\r\n\r\n    orderLine.optionArray = [];\r\n    let sizeOption = sizeArray.find(unitData => unitData.title === size);\r\n    if (sizeOption !== undefined) {\r\n      orderLine.optionArray.push(sizeOption);\r\n    }\r\n    let crustOption = crustArray.find(unitData => unitData.title === crust);\r\n    if (crustOption !== undefined) {\r\n      orderLine.optionArray.push(crustOption);\r\n    }\r\n    topping.forEach(toppingUnit => {\r\n      let toppingOption = toppingArray.find(\r\n        unitData => unitData.title === toppingUnit,\r\n      );\r\n      if (toppingOption !== undefined) {\r\n        orderLine.optionArray.push(toppingOption);\r\n      }\r\n    });\r\n\r\n    orderLine.quantity = Number(quantity);\r\n\r\n    let oldState = {\r\n      size: size,\r\n      crust: crust,\r\n      topping: topping,\r\n      quantity: quantity,\r\n    };\r\n\r\n    orderLine.productData = productData;\r\n    orderLine.productPrice = Number(totalPrice);\r\n    orderLine.oldState = oldState;\r\n\r\n    const {modifiedOrderLineIndex, modifyOrderLine} = this.props;\r\n    if (modifiedOrderLineIndex === undefined) {\r\n      addToCart(orderLine);\r\n    } else {\r\n      modifyOrderLine(orderLine, modifiedOrderLineIndex);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {modalVisible, onClose, RequestClose, productData} = this.props;\r\n    const {imageUrl, title} = productData;\r\n    const {\r\n      sizeArray,\r\n      crustArray,\r\n      toppingArray,\r\n      quantity,\r\n      size,\r\n      crust,\r\n    } = this.state;\r\n    const totalPrice = this.calculatePrice();\r\n    const {modifiedOrderLineIndex} = this.props;\r\n\r\n    return (\r\n      <Modal\r\n        animationType=\"none\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => {\r\n          RequestClose();\r\n          this.setState({isLoading: true});\r\n        }}\r\n        onShow={this.getProductOption}>\r\n        {this.state.isLoading ? (\r\n          <View style={dimensionStyles.OrderPanel}>\r\n            <SplashScreen />\r\n          </View>\r\n        ) : (\r\n          <>\r\n            <View style={dimensionStyles.OrderPanel}>\r\n              <ScrollView>\r\n                <TouchableOpacity\r\n                  onPress={() => {\r\n                    onClose();\r\n                    this.setState({isLoading: true});\r\n                  }}\r\n                  style={dimensionStyles.XIconOrderPanel}>\r\n                  <Icon name=\"close\" size={30} color=\"#e5293e\" />\r\n                </TouchableOpacity>\r\n                <Image\r\n                  style={dimensionStyles.ImageOrderPanel}\r\n                  source={{uri: imageUrl}}\r\n                  resizeMode=\"cover\"\r\n                />\r\n                <Text numberOfLines={2} style={textStyle.ProductDetailName}>\r\n                  {title}\r\n                </Text>\r\n                {sizeArray.length !== 0 ? (\r\n                  <>\r\n                    <Text numberOfLines={1} style={textStyle.ModifyType}>\r\n                      Size\r\n                    </Text>\r\n                    <View style={dimensionStyles.SizeModifyContainer}>\r\n                      <FlatList\r\n                        horizontal={true}\r\n                        showsVerticalScrollIndicator={false}\r\n                        showsHorizontalScrollIndicator={false}\r\n                        data={sizeArray}\r\n                        keyExtractor={item => item.title}\r\n                        renderItem={this.showSize}\r\n                      />\r\n                    </View>\r\n                  </>\r\n                ) : null}\r\n                {crustArray.length !== 0 ? (\r\n                  <>\r\n                    <Text numberOfLines={1} style={textStyle.ModifyType}>\r\n                      Crust\r\n                    </Text>\r\n                    <View style={dimensionStyles.SizeModifyContainer}>\r\n                      <FlatList\r\n                        horizontal={true}\r\n                        showsVerticalScrollIndicator={false}\r\n                        showsHorizontalScrollIndicator={false}\r\n                        data={crustArray}\r\n                        keyExtractor={item => item.title}\r\n                        renderItem={this.showCrust}\r\n                      />\r\n                    </View>\r\n                  </>\r\n                ) : null}\r\n                {toppingArray.length !== 0 ? (\r\n                  <>\r\n                    <Text numberOfLines={1} style={textStyle.ModifyType}>\r\n                      Topping\r\n                    </Text>\r\n                    <View style={dimensionStyles.SizeModifyContainer}>\r\n                      <FlatList\r\n                        horizontal={true}\r\n                        showsVerticalScrollIndicator={false}\r\n                        showsHorizontalScrollIndicator={false}\r\n                        data={toppingArray}\r\n                        keyExtractor={item => item.title}\r\n                        renderItem={this.showTopping}\r\n                      />\r\n                    </View>\r\n                  </>\r\n                ) : null}\r\n                <Text numberOfLines={1} style={textStyle.ModifyType}>\r\n                  Quantity\r\n                </Text>\r\n                <View style={dimensionStyles.quantityPicker}>\r\n                  <RNPickerSelect\r\n                    useNativeAndroidPickerStyle={false}\r\n                    placeholder={{\r\n                      label: `Just now: ${quantity}`,\r\n                      value: quantity,\r\n                    }}\r\n                    textInputProps={{\r\n                      textAlign: 'center',\r\n                      fontSize: 17,\r\n                    }}\r\n                    onValueChange={value => this.setState({quantity: value})}\r\n                    items={[\r\n                      {label: '1', value: '1'},\r\n                      {label: '2', value: '2'},\r\n                      {label: '3', value: '3'},\r\n                      {label: '4', value: '4'},\r\n                      {label: '5', value: '5'},\r\n                      {label: '6', value: '6'},\r\n                      {label: '7', value: '7'},\r\n                      {label: '8', value: '8'},\r\n                      {label: '9', value: '9'},\r\n                      {label: '10', value: '10'},\r\n                    ]}\r\n                  />\r\n                </View>\r\n                <View style={dimensionStyles.separateLine} />\r\n                <View style={dimensionStyles.PriceContainer}>\r\n                  <Text numberOfLines={1} style={textStyle.ModifyType}>\r\n                    Price:\r\n                  </Text>\r\n                  <Text numberOfLines={1} style={textStyle.ModifyType}>\r\n                    {totalPrice}$\r\n                  </Text>\r\n                </View>\r\n                <View style={dimensionStyles.separateLine} />\r\n                {modifiedOrderLineIndex === undefined ? (\r\n                  <TouchableOpacity\r\n                    style={dimensionStyles.addToCartButton}\r\n                    onPress={() => {\r\n                      if (sizeArray.length !== 0 && size === '') {\r\n                        alert('Please pick size');\r\n                      } else if (crustArray.length !== 0 && crust === '') {\r\n                        alert('Please pick crust');\r\n                      } else {\r\n                        this.createOrderLine(totalPrice);\r\n                        RequestClose();\r\n                        this.setState({isLoading: true});\r\n                      }\r\n                    }}>\r\n                    <Text style={textStyle.orderNowButton}>ADD TO CART</Text>\r\n                  </TouchableOpacity>\r\n                ) : (\r\n                  <TouchableOpacity\r\n                    style={dimensionStyles.addToCartButton}\r\n                    onPress={() => {\r\n                      if (sizeArray.length !== 0 && size === '') {\r\n                        alert('Please pick size');\r\n                      } else if (crustArray.length !== 0 && crust === '') {\r\n                        alert('Please pick crust');\r\n                      } else {\r\n                        this.createOrderLine(totalPrice);\r\n                        RequestClose();\r\n                        this.setState({isLoading: true});\r\n                      }\r\n                    }}>\r\n                    <Text style={textStyle.orderNowButton}>MODIFY</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </ScrollView>\r\n            </View>\r\n          </>\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nOrderPanel.propTypes = {\r\n  modalVisible: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n  productData: PropTypes.object,\r\n  RequestClose: PropTypes.func,\r\n  oldState: PropTypes.object,\r\n  modifiedOrderLineIndex: PropTypes.number,\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addToCart: orderLine => dispatch(addToCart(orderLine)),\r\n  modifyOrderLine: (orderLine, modifiedOrderLineIndex) =>\r\n    dispatch(modifyOrderLine(orderLine, modifiedOrderLineIndex)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(OrderPanel);\r\n"]}